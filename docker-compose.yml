version: '3.1'

volumes:
  redis-production:
  postgres-data-production:

services:
  db:
    image: postgres:10
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nekko_production
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  in_memory_store:
    image: redis:4-alpine
    expose:
      - 6379
    volumes:
      - redis-production:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]

  server_app: &server_app
    image: nekkoru/webserver:${WEBSERVER_TAG:-latest}
    build: ./website
    command: bundle exec rails server -b 0.0.0.0
    entrypoint: "./website/docker-entrypoint.sh"
    restart: on-failure
    environment:
      RAILS_ENV: production
      DATABASE_URL: 'postgres://postgres:postgres@db/nekko_production'
      REDIS_DB: "redis://in_memory_store:6379"
      SECRET_KEY_BASE: STUB
      DEVISE_SECRET_KEY: STUB
      RAILS_LOG_TO_STDOUT: 'true'
      REDIS_URL: 'redis://in_memory_store:6379/1'
      MOONWALK_PARSER_URL: 'http://moonwalk:8080'
    depends_on:
      - db
      - in_memory_store
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]

  # Sidekiq
  sidekiq:
    <<: *server_app
    ports: []
    command: [sidekiq]

  moonwalk:
    image: deissh/moonwalk-parser
    environment:
      # ho ho its public
      MOONWALK_API_TOKEN: 6eb82f15e2d7c6cbb2fdcebd05a197a2
